{
	"info": {
		"_postman_id": "dff9e5ec-2f69-40b7-b764-5a6b49ccc68b",
		"name": "web_form",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19713429"
	},
	"item": [
		{
			"name": "registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let requestData = request.data;\r",
							"//console.log(requestData.name)\r",
							"const $ = cheerio.load(pm.response.text());\r",
							"//console.log($.html());\r",
							"console.log($('strong').text()); \r",
							"function nameValidation (value){\r",
							"    if ( value.length > 1 && value.length <129 && !value.startsWith(\".\") && !value.endsWith(\".\") && value.length==value.trim()){\r",
							"        return true\r",
							"    } else return false\r",
							"}\r",
							"\r",
							"function surnameValidation (value){\r",
							"    if (value.length > 1 && value.length <129 && value.indexOf('.')!==0 && value.indexOf('.')!==(value.length-1) && value.indexOf('_')!==0 && value.indexOf('_')!==(value.length-1) && value.indexOf('-')!==0 && value.indexOf('-')!==(value.length-1) && value.indexOf(\"'\")!==0 && value.indexOf(\"'\")!==(value.length-1)){\r",
							"        return true\r",
							"    } else return false\r",
							"}\r",
							"\r",
							"function emailValidation (value){\r",
							"    if (value && value.length > 5 && value.length < 115 && /[@]/i.test(value)){\r",
							"        return true\r",
							"    } else return false\r",
							"}\r",
							"\r",
							"function passwordValidation (value){\r",
							"    if (value && value.length > 4 && value.length < 17){\r",
							"        return true\r",
							"    } else return false\r",
							"}\r",
							"\r",
							"function validator (){\r",
							"    return nameValidation(name) && surnameValidation(surname) && emailValidation(email) && passwordValidation(password) ? true : false\r",
							"}\r",
							"\r",
							"let name = requestData.name;\r",
							"let surname = requestData.surname;\r",
							"let email = requestData.email;\r",
							"let password = requestData.password;\r",
							"\r",
							"if (validator == true){\r",
							"    pm.test(`Expect status 200 with name = ${name} , surname = ${surname}, email = ${email} and password = ${password}`, () => {\r",
							"        pm.expect($('strong').text()).to.include(\"Success! \");\r",
							"        //pm.response.to.have.status(200);\r",
							"    })\r",
							"} else {\r",
							"    pm.test(`Expect NOT to have status 200 with name = ${name} , surname = ${surname}, email = ${email} and password = ${password}`, () => {\r",
							"        pm.expect($('strong').text()).to.include(\"Error: \");\r",
							"        //pm.response.to.have.status(200);\r",
							"    })\r",
							"}\r",
							"console.log(requestData.name.length)\r",
							"console.log(requestData.surname.length)\r",
							"console.log(requestData.email.length)\r",
							"console.log(requestData.password.length)\r",
							"console.log(nameValidation(name))\r",
							"console.log(surnameValidation(surname))\r",
							"console.log(emailValidation(email))\r",
							"console.log(passwordValidation(password))\r",
							"console.log(validator());"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "surname",
							"value": "{{surname}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://itcareer.pythonanywhere.com/",
					"protocol": "http",
					"host": [
						"itcareer",
						"pythonanywhere",
						"com"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}